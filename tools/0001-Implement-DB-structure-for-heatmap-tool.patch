diff --git a/tools/perf/util/scripting-engines/trace-event-python.c b/tools/perf/util/scripting-engines/trace-event-python.c
index c7187f0..863514a 100644
--- a/tools/perf/util/scripting-engines/trace-event-python.c
+++ b/tools/perf/util/scripting-engines/trace-event-python.c
@@ -684,6 +684,14 @@ static int tuple_set_string(PyObject *t, unsigned int pos, const char *s)
 	return PyTuple_SetItem(t, pos, PyString_FromString(s));
 }
 
+static int tuple_set_bytes(PyObject *t, unsigned int pos, const char *bytes,
+				 unsigned int size)
+{
+	PyObject *byte_array = PyByteArray_FromStringAndSize(bytes, size);
+
+	return PyTuple_SetItem(t, pos, byte_array);
+}
+
 static int python_export_evsel(struct db_export *dbe, struct perf_evsel *evsel)
 {
 	struct tables *tables = container_of(dbe, struct tables, dbe);
@@ -847,13 +855,13 @@ static int python_export_sample(struct db_export *dbe,
 {
 	struct tables *tables = container_of(dbe, struct tables, dbe);
 	PyObject *t;
-
-	t = tuple_new(22);
+	
+	t = tuple_new(23);
 
 	tuple_set_u64(t, 0, es->db_id);
 	tuple_set_u64(t, 1, es->evsel->db_id);
 	tuple_set_u64(t, 2, es->al->machine->db_id);
-	tuple_set_u64(t, 3, es->al->thread->db_id);
+	tuple_set_u64(t, 3, es->al->thread->tid);
 	tuple_set_u64(t, 4, es->comm_db_id);
 	tuple_set_u64(t, 5, es->dso_db_id);
 	tuple_set_u64(t, 6, es->sym_db_id);
@@ -872,6 +880,7 @@ static int python_export_sample(struct db_export *dbe,
 	tuple_set_s32(t, 19, es->sample->flags & PERF_BRANCH_MASK);
 	tuple_set_s32(t, 20, !!(es->sample->flags & PERF_IP_FLAG_IN_TX));
 	tuple_set_u64(t, 21, es->call_path_id);
+	tuple_set_bytes(t, 22, (const char*)es->sample->insn, es->sample->insn_len);
 
 	call_object(tables->sample_handler, t, "sample_table");
 
-- 
2.7.4

